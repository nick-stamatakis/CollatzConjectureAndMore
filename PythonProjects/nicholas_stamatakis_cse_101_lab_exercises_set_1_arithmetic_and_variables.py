# -*- coding: utf-8 -*-
"""Nicholas Stamatakis CSE 101 Lab Exercises Set #1: Arithmetic and Variables

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VMQRCMR32t5EPRR5WTs8nuHmPO3gZS95

#CSE 101: Computer Science Principles

#### Stony Brook University, Summer 2021, Session I Extended

### Lab Exercises Set #1

#### Due: Sunday, May 30, 2021 at 11:59 pm EDT

### Learning Outcomes
By the end of these exercises you should be able to:
* Write simple mathematical formulas and expressions in Python.

#### Credits

Some of the content of this Notebook was taken from http://ix.cs.uoregon.edu/~conery/eic/python/index.html, the website of John Conery's textbook *Explorations in Computing: An Introduction to Computer Science and Python Programming*.

#### A Note About Key Combinations

* A caret symbol ⌃ in front of a letter is a shorthand notation that means "use the control key".  For example, `⌃C` means "hold down the control key while typing C".

* The ⏎ symbol refers to the Return key.  

* When you want Python to execute statements in a code cell, type the statements and then hit ⌃⏎, *i.e.* hold down the Control key when hitting the Return key.

#### Arithmetic

E1. Enter `13 + 2` in the code cell below and hit ⌃⏎. Python should print the result of the expression immediately below the code cell.
"""

13 + 2

"""E2. Try some simple expressions involving other operators. In each case, hit ⌃⏎ after you enter the expression."""

17*15

19/4

13-2+7

"""E3. Try evaluating some expressions with and without parentheses:"""

(13 + 7)**2 * 2

13 + 7**2 * 2

(20+10) * (3-5)**2 / 7

"""E4. Does Python care if you include spaces in the middle of your expressions?  Tell Python to evaluate `3+4`, with no spaces:"""

3+4

"""E5. Type the expression again, this time with spaces before and after the plus sign:"""

3 + 4 #it seems as though python does not care whether you use spaces or not before the + sign

"""E6. What happens if you leave out an operand? What does Python do if you type `3 + * 5` instead of `3 + 4 * 5`?"""

# 3 + * 5 <-- It gives you a syntax error doing it this way because it doesn't know which opertation it must perform because of the lack of an operand.
3 + 4 *5 #This expression works well

"""E7. Type an expression that mistakenly uses a letter instead of a number:"""

a*5 #we have not defined a as a variable so this cannot work

"""E8. Type an expression to see how Python applies the "PEMDAS" precedence rules (parentheses, exponentiation, multiplication/division, addition/subtraction):"""

((3 + 5) + 2**2 - 7) / 2

"""E9. What do you think Python will do if you enter `8 / 2 + 5 * 3`?  Type the expression in the code cell below.  Did you get the result you expected?"""

8 / 2 + 5 * 3 # Prediction: It will result in 19.0
# I was right because it first multiplied  5 by 3 and then added that to the result of 8 over 2.

"""E10. Use Python to evaluate a simple expression such as `3 * 5` where both operands are integers:"""

3 * 5

"""E11. Re-enter the previous expression, but use floating-point numbers:"""

3.0 * 5.0

"""E12. Do you think Python will allow you to mix integers and floating point numbers? What will happen if you try to multiply 3 by 5.0, or add 1.0 to 6? Try these examples and a few other expressions that mix integers and floating point numbers. Does there seem to be a general rule for determining what kind of output is printed?"""

3 * 5.0

1.0 + 6

print (8.0 % 9)
print(8.0 / 9)
print(8.0 // 9)
# It seems as though python defaults to a floating point output when there is a mix of intergers and floating point numbers.

"""E13. The formula for converting from Celsius to Fahrenheit is $T_F = T_C \times \frac{9}{5} + 32$.  Use this formula to convert the following temperatures to Fahrenheit:
* 0°
* 22°
* 100°
"""

0 * (9/5) + 32 #determines value in farenheit

22 * (9/5) + 32 #determines value in farenheit

100 * (9/5) + 32 #determines value in farenheit

"""E14. Type the command that imports the `math` module:"""

import math

"""E15. Use `math.sqrt` to compute the square root of 50:"""

print(math.sqrt(50))

"""E16. Verify that `math.pi` has been imported by telling Python to display its value:"""

print(math.pi)

"""#### Variables

E17. Type two arithmetical expressions and assign them to variables named `x` and `y`:
"""

x = 5 * 2
y = 3 + 2

"""E18. Try out a few expressions using these variables:"""

x + y

x - y

y / x

"""E19. Change the value of `x` to 14:"""

x = 14

"""E20. Execute the code from exercise E18, above.  Did the values of these expressions change after you changed the value of `x`?"""

print(x + y)
print(x - y)
print(y / x)
#Yes, the values of these expressions did change because x now holds a new value.

"""E21. Create and assign values to the variables `length`, for representing the long edge of a sheet of paper, and `width`, for representing the short edge."""

length=10
width=5

"""E22. Write an expression that uses `length` and `width` to compute the area of the sheet of paper and assign it to a variable named `area`. Display the value of `area`."""

area=length * width
print(area)

for i in range (1,m):
    for j in range(1,n):
        c=0
        for k in range(1,r):
            c=c+A+B
            return k
        return j
    return i

"""### How to Submit Your Work

1. Go to the [course website](https://sites.google.com/stonybrook.edu/cse101sum/schedule-session-i).

1. Click the **Submit** link for this assignment.

1. Type your Net ID (Blackboard login) on the line provided.

1. Press the button marked **Add file**.

1. Click the **My Drive** tab.

1. Click on the file you wish to submit.

1. Hit **Select**.

1. Hit **Submit** to submit your file grading.
"""