# -*- coding: utf-8 -*-
"""Nicholas Stamatakis CSE 101 Lab Exercises Set #6: List Basics

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xaZJYOLE1TB9aIh9fPYQuhxt2lyDC82q

#CSE 101: Computer Science Principles

####Stony Brook University, Summer 2021, Session I Extended

### Lab Exercises Set #6

#### Due: Sunday, June 20, 2021 at 11:59 pm EDT

### Learning Outcomes
By the end of these exercises you should be able to:
* Write short code segments that use `[]` notation to access and modify lists.
* Write short code segments that call basic functions and methods for lists.
* Sort lists using the `sorted` function and the `sort` method.

### List Operations

E1. Define a list variable called `names` and store the names of 5 fictional people in it.
"""

names=["John", "Mary", "David", "Nick", "Karen"]

"""E2. Use `[]` notation to display the name at the rightmost index of the list."""

print(names[-1])

"""E3. Use slicing notation to display 3 middle elements of the list, i.e., at indices 1, 2 and 3."""

print(names[1:4])

"""E4. Use slicing notation to replace the first three elements of the list with the names `'Moe'`, `'Larry'` and `'Curly'`."""

names[:3]=['Moe', 'Larry','Curly']
names

"""Use the `del` operator to delete `'Curly'` from the list"""

del names[2]
names

"""E5. Create a list containing 10 positive integers called `ages`."""

ages=[1,2,3,4,5,6,7,8,9,10]

"""E6. Use the `[]` operator to access and display the value at index `5` of `ages`."""

print(ages[5])

"""E7. Use the `[]` operator to change the value at index `3` of `ages` to `100` and then display the updated contents of `ages`."""

ages[3]=100
print(ages)

"""E8. Use slicing to replace the elements at indices `3` through `5` of `ages` (inclusive) with the values `101`, `102`, `103` and `104`. (This will replace 3 items with 4 items.) Display the new contents of `ages`."""

ages[3:6]=[101, 102, 103, 104]
print(ages)

"""E9. Use the `del` operator to remove the elements of `ages` at indices `1` through `4` (inclusive)."""

del ages[1:5]
print(ages)

"""### List Functions

E10. Define a list variable called `costs` and store the costs of 7 items in it. Use floating-point values (numbers with a decimal point).
"""

costs=[1.01, 2.02, 3.03, 4.04, 5.05, 6.06, 7.07]
print(costs)

"""E11. Use `len` to display the length of `costs`."""

print(len(costs))

"""E12. Use `min` to display the minimum value in `costs`."""

print(min(costs))

"""E13. Use `max` to display the maximum value in `costs`."""

print(max(costs))

"""E14. Use `sum` to display the sum of the values in `costs`."""

print(sum(costs))

"""E15. Use `sum` and `len` to compute and display the average of the values in `costs`."""

average_cost= sum(costs) / len(costs)
print(f'The average cost is:', average_cost)

"""### List Methods

E16. Define a variable called `books` and store in it the titles of 5 books.
"""

books=["The Lord of the Rings", "Harry Potter", "Percy Jackson", "Loserthink", "Can't Hurt Me"]

"""E17. Use the `append` method to add another book title to the end of your `books` list."""

books.append("The Hitchhiker's Guide to the Galaxy")
print(books)

"""E18. What happens if you attempt to append two strings to `books` by passing two strings to `append`? (e.g., `books.append('...', '...')`)"""

books.append('The Seventh power', 'Zero to One')
print(books)
#It gives you an error because append can only take one argument.

"""E19. Define a variable called `other_books` and store in it the titles of 3 more books."""

other_books=["Hunger Games", "Invitation to a Beheading", "Cat's Cradle"]
print(other_books)

"""E20. Use the `extend` method to add the contents of `other_books` to the end of your `books` list."""

books.extend(other_books)
print(books)

"""E21. Use the `insert` method to insert the title `'Stormlight'` to the front of your `books` list at index 0."""

books.insert(0, 'Stormlight')
print(books)

"""E22. Use the `insert` method to insert the title `'Mistborn'` to the your `books` list at index 4."""

books.insert(4, 'Mistborn')
print(books)

"""E23. Use the `index` method to report the index of `'Mistborn'` in the `books` list."""

print(books.index('Mistborn'))

"""E24. Use the `pop` method to remove the book at index 5 of your `books` list and display the popped book."""

popped_book = books.pop(5)
print(popped_book)
print(books)

"""E25. Use the `remove` method to remove one of the books from your `books` list."""

books.remove('Harry Potter')
print(books)

"""### Sorting Lists

E26. Use the `sorted` function to make a sorted copy of your `books` list and display the sorted list.
"""

books_sorted=sorted(books)
print(books_sorted)

"""E27. Use the `sort` method to sort your `books` list and display it."""

books.sort()
print(books)

"""E28. Use the `sort` method to sort your `books` list in reverse order and display it."""

books.sort(reverse=True)
print(books)

"""### Splitting and Joining Strings

E29. Consider the string variable given below.
"""

data = 'apple|banana|orange|grapes|pears' #String with lines separating the fruits

"""E30. Use `split` to divide the string into a list of 5 strings, where each string in the new list is one of the fruits from the `data` string."""

new_data=data.split('|')
print(new_data)

"""E31. Now, working from your list, use the `join` method to rejoin the fruits, placing 3 dashes in between each adjacent pair of fruit. The displayed result should be `'apple---banana---orange---grapes---pears'`. Don't use the `replace` method for strings!"""

joined='---'.join(new_data)
print(joined)

"""### How to Submit Your Work

1. Go to the [course website](https://sites.google.com/stonybrook.edu/cse101sum/schedule-session-i).

1. Click the **Submit** link for this assignment.

1. Type your Net ID (Blackboard login) on the line provided.

1. Press the button marked **Add file**.

1. Click the **My Drive** tab.

1. Click on the file you wish to submit.

1. Hit **Select**.

1. Hit **Submit** to submit your file grading.
"""